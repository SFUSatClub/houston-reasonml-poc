// Generated by BUCKLESCRIPT VERSION 3.1.5, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var Block = require("bs-platform/lib/js/block.js");
var Store$HoustonPocReasonml = require("../store/Store.bs.js");

function uplink(store) {
  return (function (sequence) {
      var timerIds = [/* [] */0];
      var start = function () {
        var uplinkState = Store$HoustonPocReasonml.getState(store)[/* uplink */0];
        var match = uplinkState[/* inProgress */5];
        if (match) {
          return /* () */0;
        } else {
          Store$HoustonPocReasonml.dispatch(store, /* UplinkStart */Block.__(0, [sequence]));
          var _commands = sequence.commands;
          var _acc = 0;
          while(true) {
            var acc = _acc;
            var commands = _commands;
            if (commands) {
              var cmd = commands[0];
              var epoch = acc + cmd.wait | 0;
              timerIds[0] = /* :: */[
                setTimeout((function(cmd){
                    return function () {
                      var id = cmd.id;
                      return Store$HoustonPocReasonml.dispatch(store, /* UplinkSend */Block.__(1, [id]));
                    }
                    }(cmd)), epoch),
                timerIds[0]
              ];
              timerIds[0] = /* :: */[
                setTimeout((function(cmd){
                    return function () {
                      var id = cmd.id;
                      return Store$HoustonPocReasonml.dispatch(store, /* UplinkTimeout */Block.__(3, [id]));
                    }
                    }(cmd)), epoch + cmd.timeout | 0),
                timerIds[0]
              ];
              _acc = acc + epoch | 0;
              _commands = commands[1];
              continue ;
            } else {
              return /* () */0;
            }
          };
        }
      };
      var stop = function () {
        return List.iter((function (prim) {
                      clearTimeout(prim);
                      return /* () */0;
                    }), timerIds[0]);
      };
      return /* tuple */[
              start,
              stop
            ];
    });
}

exports.uplink = uplink;
/* No side effect */

// Generated by BUCKLESCRIPT VERSION 3.1.5, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var Curry = require("bs-platform/lib/js/curry.js");

function create(reducer, initialState) {
  return /* record */[
          /* state */[initialState],
          /* reducer */reducer,
          /* observers */[/* [] */0],
          /* observerCount */[0]
        ];
}

function dispatch(param, action) {
  var state = param[/* state */0];
  var newState = Curry._2(param[/* reducer */1], state[0], action);
  state[0] = newState;
  return List.iter((function (obs) {
                return Curry._1(obs[/* call */1], newState);
              }), param[/* observers */2][0]);
}

function getState(store) {
  return store[/* state */0][0];
}

function subscribe(param, call) {
  var observerCount = param[/* observerCount */3];
  var observers = param[/* observers */2];
  var listener_000 = /* id */observerCount[0];
  var listener = /* record */[
    listener_000,
    /* call */call
  ];
  observers[0] = /* :: */[
    listener,
    observers[0]
  ];
  var unsubscribe = function () {
    observers[0] = List.filter((function (l) {
              return l[/* id */0] !== observerCount[0];
            }))(observers[0]);
    return /* () */0;
  };
  observerCount[0] = observerCount[0] + 1 | 0;
  return unsubscribe;
}

exports.create = create;
exports.dispatch = dispatch;
exports.getState = getState;
exports.subscribe = subscribe;
/* No side effect */
